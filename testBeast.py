#!/usr/bin/python
import unittest
from modGrid import *
from modPlayer import *
from modBeast import *
from modRock import *
from modHBeast import *
from modSBeast import *
from modEggs import *

class BeastTestCase(unittest.TestCase):

    def testMoveNorth(self):
        g = Grid()
        p = Player()
        g.addElement(p,10,10)
        g.movePlayer(p,g.MOVE_N)
        assert g.getElementPosition(p) == (10,9)

    def testMoveNorthEast(self):
        g = Grid(10,10)
        p = Player()
        g.addElement(p,5,5)
        g.movePlayer(p,g.MOVE_NE)
        assert g.getElementPosition(p) == (6,4)

    def testMoveEast(self):
        g = Grid(10,10)
        p = Player()
        g.addElement(p,5,5)
        g.movePlayer(p,g.MOVE_E)
        assert g.getElementPosition(p) == (6,5)

    def testMoveSouthEast(self):
        g = Grid(10,10)
        p = Player()
        g.addElement(p,5,5)
        g.movePlayer(p,g.MOVE_SE)
        assert g.getElementPosition(p) == (6,6)

    def testMoveSouth(self):
        g = Grid(10,10)
        p = Player()
        g.addElement(p,5,5)
        g.movePlayer(p,g.MOVE_S)
        assert g.getElementPosition(p) == (5,6)

    def testMoveSouthWest(self):
        g = Grid(10,10)
        p = Player()
        g.addElement(p,5,5)
        g.movePlayer(p,g.MOVE_SW)
        assert g.getElementPosition(p) == (4,6)

    def testMoveWest(self):
        g = Grid(10,10)
        p = Player()
        g.addElement(p,5,5)
        g.movePlayer(p,g.MOVE_W)
        assert g.getElementPosition(p) == (4,5)

    def testMoveNorthWest(self):
        g = Grid(10,10)
        p = Player()
        g.addElement(p,5,5)
        g.movePlayer(p,g.MOVE_NW)
        assert g.getElementPosition(p) == (4,4)

    def testCrashNorth(self):
        g = Grid(1,1)
        p = Player()
        g.addElement(p,1,1)
        g.movePlayer(p,g.MOVE_N)
        assert g.getElementPosition(p) == (1,1)

    def testCrashNorthEast(self):
        g = Grid(1,1)
        p = Player()
        g.addElement(p,1,1)
        g.movePlayer(p,g.MOVE_NE)
        assert g.getElementPosition(p) == (1,1)

    def testCrashEast(self):
        g = Grid(1,1)
        p = Player()
        g.addElement(p,1,1)
        g.movePlayer(p,g.MOVE_E)
        assert g.getElementPosition(p) == (1,1)

    def testCrashSouthEast(self):
        g = Grid(1,1)
        p = Player()
        g.addElement(p,1,1)
        g.movePlayer(p,g.MOVE_SE)
        assert g.getElementPosition(p) == (1,1)

    def testCrashSouth(self):
        g = Grid(1,1)
        p = Player()
        g.addElement(p,1,1)
        g.movePlayer(p,g.MOVE_S)
        assert g.getElementPosition(p) == (1,1)

    def testCrashSouthWest(self):
        g = Grid(1,1)
        p = Player()
        g.addElement(p,1,1)
        g.movePlayer(p,g.MOVE_SW)
        assert g.getElementPosition(p) == (1,1)

    def testCrashWest(self):
        g = Grid(1,1)
        p = Player()
        g.addElement(p,1,1)
        g.movePlayer(p,g.MOVE_W)
        assert g.getElementPosition(p) == (1,1)

    def testCrashNorthWest(self):
        g = Grid(1,1)
        p = Player()
        g.addElement(p,1,1)
        g.movePlayer(p,g.MOVE_NW)
        assert g.getElementPosition(p) == (1,1)

    def testCrashBeastNorth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,4,4)
        g.addElement(p,5,4)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
        g.movePlayer(p,g.MOVE_N)
        assert g.getElementPosition(p) == (4,5)
        assert p.isAlive == False

    def testCrashBeastEast(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,7)
        g.addElement(p,5,6)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
        g.movePlayer(p,g.MOVE_E)
        assert g.getElementPosition(p) == (6,5)
        assert p.isAlive == False

    def testCrashBeastSouth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,5)
        g.addElement(p,4,5)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
        g.movePlayer(p,g.MOVE_S)
        assert g.getElementPosition(p) == (5,4)
        assert p.isAlive == False

    def testCrashBeastWest(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,6)
        g.addElement(p,5,7)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
        g.movePlayer(p,g.MOVE_W)
        assert g.getElementPosition(p) == (7,5)
        assert p.isAlive == False

    def testMoveRocksNorth(self):
        g = Grid(10,10)
        p = Player()
        r1 = Rock()
        r2 = Rock()
        r3 = Rock()
        g.addElement(r1,2,5)
        g.addElement(r2,4,5)
        g.addElement(r3,6,5)
        g.addElement(p,8,5)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
#        g.renderGrid()
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Rock3: " + str(g.getElementPosition(r3))
#        print "Player: " + str(g.getElementPosition(p))
        assert g.getElementPosition(r1) == (5,1)
        assert g.getElementPosition(r2) == (5,2)
        assert g.getElementPosition(r3) == (5,3)
        assert g.getElementPosition(p) == (5,4)

    def testMoveRocksEast(self):
        g = Grid()
        p = Player()
        r1 = Rock()
        r2 = Rock()
        r3 = Rock()
        r4 = Rock()
        r5 = Rock()
        r6 = Rock()
        r7 = Rock()
        r8 = Rock()
        r9 = Rock()
        g.addElement(r1,5,4)
        g.addElement(r2,5,5)
        g.addElement(r3,5,6)
        g.addElement(r4,5,7)
        g.addElement(r5,5,8)
        g.addElement(r6,5,9)
        g.addElement(r7,5,10)
        g.addElement(r8,5,11)
        g.addElement(r9,5,12)
        g.addElement(p,5,2)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.renderGridAscii()
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Rock3: " + str(g.getElementPosition(r3))
#        print "Player: " + str(g.getElementPosition(p))
        assert g.getElementPosition(r1) == (8,5)
        assert g.getElementPosition(r2) == (9,5)
        assert g.getElementPosition(r3) == (10,5)
        assert g.getElementPosition(p) == (7,5)

    def testMoveRocksSouth(self):
        g = Grid(10,10)
        p = Player()
        r1 = Rock()
        r2 = Rock()
        r3 = Rock()
        g.addElement(r1,4,5)
        g.addElement(r2,6,5)
        g.addElement(r3,8,5)
        g.addElement(p,2,5)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
#        g.renderGrid()
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Rock3: " + str(g.getElementPosition(r3))
#        print "Player: " + str(g.getElementPosition(p))
        assert g.getElementPosition(r1) == (5,8)
        assert g.getElementPosition(r2) == (5,9)
        assert g.getElementPosition(r3) == (5,10)
        assert g.getElementPosition(p) == (5,7)

    def testMoveRocksWest(self):
        g = Grid(10,10)
        p = Player()
        r1 = Rock()
        r2 = Rock()
        r3 = Rock()
        g.addElement(r1,5,2)
        g.addElement(r2,5,4)
        g.addElement(r3,5,6)
        g.addElement(p,5,8)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
#        g.renderGrid()
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Rock3: " + str(g.getElementPosition(r3))
#        print "Player: " + str(g.getElementPosition(p))
        assert g.getElementPosition(r1) == (1,5)
        assert g.getElementPosition(r2) == (2,5)
        assert g.getElementPosition(r3) == (3,5)
        assert g.getElementPosition(p) == (4,5)

    def testSquashBeastWithRocksNorth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        r1 = Rock()
        r2 = Rock()
        g.addElement(r1,3,5)
        g.addElement(b,4,5)
        g.addElement(r2,6,5)
        g.addElement(p,8,5)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (5,1)
        assert g.getElementPosition(r2) == (5,2)
        assert g.getElementPosition(p) == (5,3)
        assert b.isAlive == False

    def testSquashBeastWithRocksEast(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        r1 = Rock()
        r2 = Rock()
        g.addElement(r1,5,7)
        g.addElement(b,5,6)
        g.addElement(r2,5,4)
        g.addElement(p,5,2)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (10,5)
        assert g.getElementPosition(r2) == (9,5)
        assert g.getElementPosition(p) == (8,5)
        assert b.isAlive == False

    def testSquashBeastWithRocksSouth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        r1 = Rock()
        r2 = Rock()
        g.addElement(r1,7,5)
        g.addElement(b,6,5)
        g.addElement(r2,4,5)
        g.addElement(p,2,5)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (5,10)
        assert g.getElementPosition(r2) == (5,9)
        assert g.getElementPosition(p) == (5,8)
        assert b.isAlive == False


    def testSquashBeastWithRocksWest(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        r1 = Rock()
        r2 = Rock()
        g.addElement(r1,5,3)
        g.addElement(b,5,4)
        g.addElement(r2,5,6)
        g.addElement(p,5,8)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (1,5)
        assert g.getElementPosition(r2) == (2,5)
        assert g.getElementPosition(p) == (3,5)
        assert b.isAlive == False


    def testFailSquashBeastWithRockNorth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        r1 = Rock()
        r2 = Rock()
        g.addElement(r1,2,5)
        g.addElement(b,4,5)
        g.addElement(r2,6,5)
        g.addElement(p,8,5)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (5,2)
        assert g.getElementPosition(b) == (5,4)
        assert g.getElementPosition(r2) == (5,5)
        assert g.getElementPosition(p) == (5,6)
        assert b.isAlive == True

    def testFailSquashBeastWithRocksEast(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        r1 = Rock()
        r2 = Rock()
        g.addElement(r1,5,8)
        g.addElement(b,5,6)
        g.addElement(r2,5,4)
        g.addElement(p,5,2)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
        g.movePlayer(p,g.MOVE_E)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (8,5)
        assert g.getElementPosition(b) == (6,5)
        assert g.getElementPosition(r2) == (5,5)
        assert g.getElementPosition(p) == (4,5)
        assert b.isAlive == True

    def testFailSquashBeastWithRocksSouth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        r1 = Rock()
        r2 = Rock()
        g.addElement(r1,8,5)
        g.addElement(b,6,5)
        g.addElement(r2,4,5)
        g.addElement(p,2,5)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
        g.movePlayer(p,g.MOVE_S)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (5,8)
        assert g.getElementPosition(b) == (5,6)
        assert g.getElementPosition(r2) == (5,5)
        assert g.getElementPosition(p) == (5,4)
        assert b.isAlive == True


    def testFailSquashBeastWithRocksWest(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        r1 = Rock()
        r2 = Rock()
        g.addElement(r1,5,2)
        g.addElement(b,5,4)
        g.addElement(r2,5,6)
        g.addElement(p,5,8)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
        g.movePlayer(p,g.MOVE_W)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (2,5)
        assert g.getElementPosition(b) == (4,5)
        assert g.getElementPosition(r2) == (5,5)
        assert g.getElementPosition(p) == (6,5)
        assert b.isAlive == True


    def testSquashBeastWithWallNorth(self):
        g = Grid(3,3)
        p = Player()
        b = Beast()
        r1 = Rock()
        g.addElement(b,1,2)
        g.addElement(r1,2,2)
        g.addElement(p,3,2)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_N)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_N)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_N)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (2,1)
        assert g.getElementPosition(p) == (2,2)
        assert b.isAlive == False


    def testSquashBeastWithWallEast(self):
        g = Grid(3,3)
        p = Player()
        b = Beast()
        r1 = Rock()
        g.addElement(b,2,3)
        g.addElement(r1,2,2)
        g.addElement(p,2,1)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_E)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_E)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_E)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (3,2)
        assert g.getElementPosition(p) == (2,2)
        assert b.isAlive == False

    def testSquashBeastWithWallSouth(self):
        g = Grid(3,3)
        p = Player()
        b = Beast()
        r1 = Rock()
        g.addElement(b,3,2)
        g.addElement(r1,2,2)
        g.addElement(p,1,2)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_S)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_S)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_S)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (2,3)
        assert g.getElementPosition(p) == (2,2)
        assert b.isAlive == False

    def testSquashBeastWithWallWest(self):
        g = Grid(3,3)
        p = Player()
        b = Beast()
        r1 = Rock()
        g.addElement(b,2,1)
        g.addElement(r1,2,2)
        g.addElement(p,2,3)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_W)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_W)
#        g.renderGrid()
        g.movePlayer(p,g.MOVE_W)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (1,2)
        assert g.getElementPosition(p) == (2,2)
        assert b.isAlive == False

    def testMoveBeastToPlayerNorth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,5)
        g.addElement(p,2,5)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
        assert g.getElementPosition(b) == (5,4)

    def testMoveBeastToPlayerNorthEast(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,5)
        g.addElement(p,3,7)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
        assert g.getElementPosition(b) == (6,4)

    def testMoveBeastToPlayerEast(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,5)
        g.addElement(p,5,8)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
        assert g.getElementPosition(b) == (6,5)

    def testMoveBeastToPlayerSouthEast(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,5)
        g.addElement(p,7,8)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
        assert g.getElementPosition(b) == (6,6)


    def testMoveBeastToPlayerSouth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,5)
        g.addElement(p,7,5)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
        assert g.getElementPosition(b) == (5,6)

    def testMoveBeastToPlayerSouthWest(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,5)
        g.addElement(p,8,3)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
        assert g.getElementPosition(b) == (4,6)

    def testMoveBeastToPlayerWest(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,5)
        g.addElement(p,5,3)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
        assert g.getElementPosition(b) == (4,5)

    def testMoveBeastToPlayerNorthWest(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        g.addElement(b,5,5)
        g.addElement(p,2,3)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
#        print "Beast: " + str(g.getElementPosition(b))
        assert g.getElementPosition(b) == (4,4)

    def testMoveBeastToPlayerBehindRockNorth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        r = Rock()
        g.addElement(b,6,5)
        g.addElement(r,4,5)
        g.addElement(p,2,5)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
        g.moveBeast(b,p)
#        g.renderGrid()
        assert g.getElementPosition(b) == (5,5)


    def testFailSquashBeastWithRockAndBeastNorth(self):
        g = Grid(10,10)
        p = Player()
        b = Beast()
        b2 = Beast()
        r1 = Rock()
        r2 = Rock()
        g.addElement(r1,3,5)
        g.addElement(b,4,5)
        g.addElement(b2,5,5)
        g.addElement(r2,6,5)
        g.addElement(p,8,5)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
        g.movePlayer(p,g.MOVE_N)
#        print "Rock1: " + str(g.getElementPosition(r1))
#        print "Rock2: " + str(g.getElementPosition(r2))
#        print "Beast: " + str(g.getElementPosition(b))
#        print "Player: " + str(g.getElementPosition(p))
#        g.renderGrid()
        assert g.getElementPosition(r1) == (5,3)
        assert g.getElementPosition(b) == (5,4)
        assert g.getElementPosition(b2) == (5,5)
        assert g.getElementPosition(r2) == (5,6)
        assert g.getElementPosition(p) == (5,7)
        assert b.isAlive == True

    def testFillGridWithBlocks(self):
        g = Grid()
        b = Beast()
        s = SuperBeast()
        h = HatchedBeast()
        e = Eggs()
        p = Player()
        g.addElement(p,1,1)
        g.addElement(b,1,2)
        g.addElement(s,1,3)
        g.addElement(h,1,4)
        g.addElement(e,1,5)
        g.fillGridRandomWalls()
        g.fillGridRocks()
        g.renderGridAscii()


if __name__ == '__main__':
  unittest.main()
